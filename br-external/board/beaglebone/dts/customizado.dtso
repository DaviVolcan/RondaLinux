/dts-v1/;
/plugin/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/am33xx.h>

/ {
    compatible = "ti,am335x-bone-black";

    fragment@0 {
        target-path = "/";
        __overlay__ {
            model = "My custom beaglebone!";
        };
    };

    fragment@1 {
        target = <&am33xx_pinmux>;
        __overlay__ {
            bb_custom_leds_pins: pinmux-bb-custom-leds-pins {
                pinctrl-single,pins = <
                    AM33XX_PADCONF(AM335X_PIN_GPMC_A1, PIN_OUTPUT_PULLDOWN, MUX_MODE7)
                    AM33XX_PADCONF(AM335X_PIN_MCASP0_FSR, PIN_OUTPUT_PULLDOWN, MUX_MODE7)
                    AM33XX_PADCONF(AM335X_PIN_MCASP0_AXR0, PIN_OUTPUT_PULLDOWN, MUX_MODE7)
                >;
            };
        };
    };

    fragment@2 {
        target = <&ocp>;
        __overlay__ {
            custom_leds {
                compatible = "gpio-leds";
                pinctrl-names = "default";
                pinctrl-0 = <&bb_custom_leds_pins>;

                custom_led1 {
                    label = "custom:red:user1";
                    gpios = <&gpio1 17 0>;
                    linux,default-trigger = "none";
                    default-state = "off";
                };
                custom_led2 {
                    label = "custom:red:user2";
                    gpios = <&gpio3 19 0>;
                    linux,default-trigger = "none";
                    default-state = "off";
                };
                custom_led3 {
                    label = "custom:red:user3";
                    gpios = <&gpio3 16 0>;
                    linux,default-trigger = "none";
                    default-state = "off";
                };

            };
        };
    };

    fragment@3 {
        target = <&i2c2>;
        __overlay__ {
            ds1339: rtc@68 {
                compatible = "dallas,ds1339";
                reg = <0x68>;
                trickle-resistor-ohms = <250>;
            };
        };
    };fragment@4 {
        target = <&rtc>;
        __overlay__ {
            status = "disabled";
        };
    };
};
